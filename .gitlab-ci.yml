image: docker:20.10.12
services:
  - docker:20.10.12-dind

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERDIR: ""
  DOCKER_FILE: "deployment/Dockerfile"

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == "development"
    - if: $CI_COMMIT_BRANCH == "staging"
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

stages:
  - linting
  - unittesting

linting:
  image: python:3.12-slim
  stage: linting
  before_script:
    - apt update && apt install -y --no-install-recommends git
    - pip install poetry
    - poetry config virtualenvs.create false
    - poetry install --only dev --no-interaction
  script:
    - pre-commit run --all-files

unittesting:
  image: docker:20.10.12
  services:
    - docker:20.10.12-dind
    - postgres:15
  stage: unittesting
  variables:
    STAGE_ENVIRONMENT: "testing"
    ENVIRONMENT: "TESTING"
    DOCKER_FILE: ".deployment/testing/Dockerfile"
    POSTGRES_DB: unittesting
    POSTGRES_PASSWORD: postgres
    POSTGRES_USER: postgres
    POSTGRES_HOST_AUTH_METHOD: trust
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - cp $envs "$CI_PROJECT_DIR/envs.sh"
  script:
    - env | grep POSTGRES_PORT_5432_TCP_ADDR
    - sh .deployment/testing/test.sh
  coverage: "/TOTAL.+ ([0-9]{1,3}%)/"
  artifacts:
    when: always
    reports:
      junit: reports/unittest_report.xml
      coverage_report:
        coverage_format: cobertura
        path: reports/coverage.xml
  needs:
    - ["linting"]
